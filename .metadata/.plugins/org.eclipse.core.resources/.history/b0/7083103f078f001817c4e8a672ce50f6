package com.proxy.cglib;

import java.lang.reflect.Method;

import org.springframework.cglib.proxy.MethodInterceptor;
import org.springframework.cglib.proxy.MethodProxy;

import com.lulf.sjms.ZFZ;
import com.proxy.JDK.MyClassLoader;
import com.proxy.JDK.MyProxy;

public class ZhongJie implements MethodInterceptor{
	
	// 获取被代理人的对象
		@SuppressWarnings("rawtypes")
		public Object getInstance(String className) throws Exception {
			this.target = target;
			Class zz = target.getClass();
			System.out.println("被代理对象的class是 ：" + zz);
			return MyProxy.newProxyInstance(new MyClassLoader(), zz.getInterfaces(), this);
		}

	//同样是做了一件字节码重这样一件事
	// 对于使用api的用户而言是无感知的
	@Override
	public Object intercept(Object arg0, Method arg1, Object[] arg2, MethodProxy arg3) throws Throwable {
		
		return null;
	}

}
